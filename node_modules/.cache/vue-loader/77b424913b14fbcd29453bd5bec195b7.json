{"remainingRequest":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css&","dependencies":[{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/src/components/HelloWorld.vue","mtime":1583704762708},{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDMgewogIG1hcmdpbjogNDBweCAwIDA7Cn0KdWwgewogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICBwYWRkaW5nOiAwOwp9CmxpIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAwIDEwcHg7Cn0KYSB7CiAgY29sb3I6ICM0MmI5ODM7Cn0K"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <h2>{{ msg2 }}</h2>\n    <p>\n      {{date}}<br>\n      {{time}}\n    </p>\n    <h4>Left and Right (or Start and End)</h4>\n   <b-card img-src=\"https://placekitten.com/300/300\" img-alt=\"Card image\" img-left class=\"mb-3\">\n     <b-card-text>\n       Some quick example text to build on the card and make up the bulk of the card's content.\n     </b-card-text>\n   </b-card>\n   <main-card title=\"Main Graph\">\n    content\n  </main-card>\n\n  </div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport MainCard from '@/components/MainCard.vue'\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  components {\n    'main-card': MainCard\n  },\n  data () {\n  \treturn {\n  \t\tmsg2: 'This is a test'\n  \t}\n  },\n  async mounted(){\n  \tlet url = window.location.href\n  \tlet re = /[0-9]{2,3}\\.[0-9]{2,3}\\.[0-9]{2,3}\\.[0-9]{2,3}/\n  \tlet domain = url.match(re)[0]\n  \tconsole.log(domain)\n  \tthis.msg2 = (await axios.get('http://'+domain+':5000/message')).data\n  },\n  methods: {\n  \tlogMsg: function(){\n  \t\tconsole.log(this.msg2);\n  \t}\n  },\n  computed: {\n  \tdate: function(){\n  \t\treturn new Date()\n  \t},\n  \ttime: function(){\n  \t\treturn (new Date).getTime()\n  \t}\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}