{"remainingRequest":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/src/components/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/src/components/Dashboard.vue","mtime":1584666838936},{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/laxsta/Documents/College/2020-Spring/ATLS_4214 - Big Data Architecture/DeepStock/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IE1haW5DYXJkIGZyb20gJ0AvY29tcG9uZW50cy9NYWluQ2FyZC52dWUnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGVsbG9Xb3JsZCcsCiAgcHJvcHM6IHsKICAgIG1zZzogU3RyaW5nLAogIH0sCiAgY29tcG9uZW50czogewogICAgJ21haW4tY2FyZCc6IE1haW5DYXJkCiAgfSwKICBkYXRhICgpIHsKICAJcmV0dXJuIHsKICAJCW1zZzI6ICdUaGlzIGlzIGEgdGVzdCcKICAJfQogIH0sCiAgYXN5bmMgbW91bnRlZCgpewogIAlsZXQgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWYKICAJbGV0IHJlID0gL1swLTldezIsM31cLlswLTldezIsM31cLlswLTldezIsM31cLlswLTldezIsM30vCiAgCWxldCBkb21haW4gPSB1cmwubWF0Y2gocmUpWzBdCiAgCWNvbnNvbGUubG9nKGRvbWFpbikKICAJdGhpcy5tc2cyID0gKGF3YWl0IGF4aW9zLmdldCgnaHR0cDovLycrZG9tYWluKyc6NTAwMC9tZXNzYWdlJykpLmRhdGEKICB9LAogIG1ldGhvZHM6IHsKICAJbG9nTXNnOiBmdW5jdGlvbigpewogIAkJY29uc29sZS5sb2codGhpcy5tc2cyKTsKICAJfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAJZGF0ZTogZnVuY3Rpb24oKXsKICAJCXJldHVybiBuZXcgRGF0ZSgpCiAgCX0sCiAgCXRpbWU6IGZ1bmN0aW9uKCl7CiAgCQlyZXR1cm4gKG5ldyBEYXRlKS5nZXRUaW1lKCkKICAJfQogIH0KfQo="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <p>\n      {{date}}<br>\n      {{time}}\n    </p>\n   <b-card img-src=\"https://placekitten.com/300/300\" img-alt=\"Card image\" img-left class=\"mb-3\">\n     <b-card-text>\n       Some quick example text to build on the card and make up the bulk of the card's content.\n     </b-card-text>\n   </b-card>\n   <b-row class=\"shadow-lg p-3 mb-5 bg-white rounded col-sm\">\n     <main-card title=\"Main Graph\">Content</main-card>\n     <main-card title=\"Main Graph\">{{msg}}</main-card>\n     <main-card title=\"Main Graph\"></main-card>\n     <main-card title=\"Main Graph\">Content</main-card>\n     <main-card title=\"Main Graph\">Content</main-card>\n     <main-card title=\"Main Graph\">Content</main-card>\n     <p>Data goes here:</p>\n\n   </b-row>\n  </div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport MainCard from '@/components/MainCard.vue'\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String,\n  },\n  components: {\n    'main-card': MainCard\n  },\n  data () {\n  \treturn {\n  \t\tmsg2: 'This is a test'\n  \t}\n  },\n  async mounted(){\n  \tlet url = window.location.href\n  \tlet re = /[0-9]{2,3}\\.[0-9]{2,3}\\.[0-9]{2,3}\\.[0-9]{2,3}/\n  \tlet domain = url.match(re)[0]\n  \tconsole.log(domain)\n  \tthis.msg2 = (await axios.get('http://'+domain+':5000/message')).data\n  },\n  methods: {\n  \tlogMsg: function(){\n  \t\tconsole.log(this.msg2);\n  \t}\n  },\n  computed: {\n  \tdate: function(){\n  \t\treturn new Date()\n  \t},\n  \ttime: function(){\n  \t\treturn (new Date).getTime()\n  \t}\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}